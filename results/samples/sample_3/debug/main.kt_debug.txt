LINE NUMBERS: [2, 3, 4, 6, 9, 10, 11, 14, 17, 18, 20]

LINE NUMBERS AFTER STATIC ANALYSIS: [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 20]

PACKAGE_DIRECTIVE: i = 1   class = class org.jetbrains.kotlin.psi.KtPackageDirective (Kotlin reflection is not available)    text:


ADD: ALWAYS_RETAINED_PSI_ELEMENT

IMPORT_LIST: i = 1   class = class org.jetbrains.kotlin.psi.KtImportList (Kotlin reflection is not available)    text:


ADD: ALWAYS_RETAINED_PSI_ELEMENT

FUN: i = 1   class = class org.jetbrains.kotlin.psi.KtNamedFunction (Kotlin reflection is not available)    text:
fun main() {
    val a = Complex(2.2, 2.1)
    val b = -Complex("3.2+1.1i")
    val c = a + b

    val pb = PhoneBook()
    val artyom = "Artyom"
    val number1 = "+7 978 888 88 88"
    pb.addHuman(artyom)
    pb.addPhone(artyom, number1)
    pb.addPhone(artyom, "+7 981 111 11 11")

    val alexander = "Alexander"
    pb.addHuman(alexander)
    pb.addPhone(alexander, number1)

    pb.removePhone(artyom, number1)
    pb.addPhone(alexander, number1)

    println("$c\n${pb.humanByPhone(number1)}")
}

ADD: CONTAINER

BLOCK: i = 1   class = class org.jetbrains.kotlin.psi.KtBlockExpression (Kotlin reflection is not available)    text:
{
    val a = Complex(2.2, 2.1)
    val b = -Complex("3.2+1.1i")
    val c = a + b

    val pb = PhoneBook()
    val artyom = "Artyom"
    val number1 = "+7 978 888 88 88"
    pb.addHuman(artyom)
    pb.addPhone(artyom, number1)
    pb.addPhone(artyom, "+7 981 111 11 11")

    val alexander = "Alexander"
    pb.addHuman(alexander)
    pb.addPhone(alexander, number1)

    pb.removePhone(artyom, number1)
    pb.addPhone(alexander, number1)

    println("$c\n${pb.humanByPhone(number1)}")
}

ADD: CONTAINER

PROPERTY: i = 2   class = class org.jetbrains.kotlin.psi.KtProperty (Kotlin reflection is not available)    text:
val a = Complex(2.2, 2.1)

ADD: SLICE_ELEMENT

CALL_EXPRESSION: i = 2   class = class org.jetbrains.kotlin.psi.KtCallExpression (Kotlin reflection is not available)    text:
Complex(2.2, 2.1)

ADD: SLICE_ELEMENT

PROPERTY: i = 3   class = class org.jetbrains.kotlin.psi.KtProperty (Kotlin reflection is not available)    text:
val b = -Complex("3.2+1.1i")

ADD: SLICE_ELEMENT

PREFIX_EXPRESSION: i = 3   class = class org.jetbrains.kotlin.psi.KtPrefixExpression (Kotlin reflection is not available)    text:
-Complex("3.2+1.1i")

ADD: SLICE_ELEMENT

PROPERTY: i = 4   class = class org.jetbrains.kotlin.psi.KtProperty (Kotlin reflection is not available)    text:
val c = a + b

ADD: SLICE_ELEMENT

BINARY_EXPRESSION: i = 4   class = class org.jetbrains.kotlin.psi.KtBinaryExpression (Kotlin reflection is not available)    text:
a + b

ADD: SLICE_ELEMENT

PROPERTY: i = 6   class = class org.jetbrains.kotlin.psi.KtProperty (Kotlin reflection is not available)    text:
val pb = PhoneBook()

ADD: SLICE_ELEMENT

CALL_EXPRESSION: i = 6   class = class org.jetbrains.kotlin.psi.KtCallExpression (Kotlin reflection is not available)    text:
PhoneBook()

ADD: SLICE_ELEMENT

PROPERTY: i = 7   class = class org.jetbrains.kotlin.psi.KtProperty (Kotlin reflection is not available)    text:
val artyom = "Artyom"

ADD: SLICE_ELEMENT

STRING_TEMPLATE: i = 7   class = class org.jetbrains.kotlin.psi.KtStringTemplateExpression (Kotlin reflection is not available)    text:
"Artyom"

ADD: SLICE_ELEMENT

PROPERTY: i = 8   class = class org.jetbrains.kotlin.psi.KtProperty (Kotlin reflection is not available)    text:
val number1 = "+7 978 888 88 88"

ADD: SLICE_ELEMENT

STRING_TEMPLATE: i = 8   class = class org.jetbrains.kotlin.psi.KtStringTemplateExpression (Kotlin reflection is not available)    text:
"+7 978 888 88 88"

ADD: SLICE_ELEMENT

DOT_QUALIFIED_EXPRESSION: i = 9   class = class org.jetbrains.kotlin.psi.KtDotQualifiedExpression (Kotlin reflection is not available)    text:
pb.addHuman(artyom)

ADD: SLICE_ELEMENT

DOT_QUALIFIED_EXPRESSION: i = 10   class = class org.jetbrains.kotlin.psi.KtDotQualifiedExpression (Kotlin reflection is not available)    text:
pb.addPhone(artyom, number1)

ADD: SLICE_ELEMENT

DOT_QUALIFIED_EXPRESSION: i = 11   class = class org.jetbrains.kotlin.psi.KtDotQualifiedExpression (Kotlin reflection is not available)    text:
pb.addPhone(artyom, "+7 981 111 11 11")

ADD: SLICE_ELEMENT

PROPERTY: i = 13   class = class org.jetbrains.kotlin.psi.KtProperty (Kotlin reflection is not available)    text:
val alexander = "Alexander"

ADD: SLICE_ELEMENT

STRING_TEMPLATE: i = 13   class = class org.jetbrains.kotlin.psi.KtStringTemplateExpression (Kotlin reflection is not available)    text:
"Alexander"

ADD: SLICE_ELEMENT

DOT_QUALIFIED_EXPRESSION: i = 14   class = class org.jetbrains.kotlin.psi.KtDotQualifiedExpression (Kotlin reflection is not available)    text:
pb.addHuman(alexander)

ADD: SLICE_ELEMENT

DOT_QUALIFIED_EXPRESSION: i = 15   class = class org.jetbrains.kotlin.psi.KtDotQualifiedExpression (Kotlin reflection is not available)    text:
pb.addPhone(alexander, number1)

SKIP

DOT_QUALIFIED_EXPRESSION: i = 17   class = class org.jetbrains.kotlin.psi.KtDotQualifiedExpression (Kotlin reflection is not available)    text:
pb.removePhone(artyom, number1)

ADD: SLICE_ELEMENT

DOT_QUALIFIED_EXPRESSION: i = 18   class = class org.jetbrains.kotlin.psi.KtDotQualifiedExpression (Kotlin reflection is not available)    text:
pb.addPhone(alexander, number1)

ADD: SLICE_ELEMENT

CALL_EXPRESSION: i = 20   class = class org.jetbrains.kotlin.psi.KtCallExpression (Kotlin reflection is not available)    text:
println("$c\n${pb.humanByPhone(number1)}")

ADD: SLICE_ELEMENT


==========SLICE ELEMENTS==========

PACKAGE_DIRECTIVE:
 

IMPORT_LIST:
 

FUN:
 fun main() {
    val a = Complex(2.2, 2.1)
    val b = -Complex("3.2+1.1i")
    val c = a + b

    val pb = PhoneBook()
    val artyom = "Artyom"
    val number1 = "+7 978 888 88 88"
    pb.addHuman(artyom)
    pb.addPhone(artyom, number1)
    pb.addPhone(artyom, "+7 981 111 11 11")

    val alexander = "Alexander"
    pb.addHuman(alexander)
    pb.addPhone(alexander, number1)

    pb.removePhone(artyom, number1)
    pb.addPhone(alexander, number1)

    println("$c\n${pb.humanByPhone(number1)}")
}

BLOCK:
 {
    val a = Complex(2.2, 2.1)
    val b = -Complex("3.2+1.1i")
    val c = a + b

    val pb = PhoneBook()
    val artyom = "Artyom"
    val number1 = "+7 978 888 88 88"
    pb.addHuman(artyom)
    pb.addPhone(artyom, number1)
    pb.addPhone(artyom, "+7 981 111 11 11")

    val alexander = "Alexander"
    pb.addHuman(alexander)
    pb.addPhone(alexander, number1)

    pb.removePhone(artyom, number1)
    pb.addPhone(alexander, number1)

    println("$c\n${pb.humanByPhone(number1)}")
}

PROPERTY:
 val a = Complex(2.2, 2.1)

CALL_EXPRESSION:
 Complex(2.2, 2.1)

PROPERTY:
 val b = -Complex("3.2+1.1i")

PREFIX_EXPRESSION:
 -Complex("3.2+1.1i")

PROPERTY:
 val c = a + b

BINARY_EXPRESSION:
 a + b

PROPERTY:
 val pb = PhoneBook()

CALL_EXPRESSION:
 PhoneBook()

PROPERTY:
 val artyom = "Artyom"

STRING_TEMPLATE:
 "Artyom"

PROPERTY:
 val number1 = "+7 978 888 88 88"

STRING_TEMPLATE:
 "+7 978 888 88 88"

DOT_QUALIFIED_EXPRESSION:
 pb.addHuman(artyom)

DOT_QUALIFIED_EXPRESSION:
 pb.addPhone(artyom, number1)

DOT_QUALIFIED_EXPRESSION:
 pb.addPhone(artyom, "+7 981 111 11 11")

PROPERTY:
 val alexander = "Alexander"

STRING_TEMPLATE:
 "Alexander"

DOT_QUALIFIED_EXPRESSION:
 pb.addHuman(alexander)

DOT_QUALIFIED_EXPRESSION:
 pb.removePhone(artyom, number1)

DOT_QUALIFIED_EXPRESSION:
 pb.addPhone(alexander, number1)

CALL_EXPRESSION:
 println("$c\n${pb.humanByPhone(number1)}")


==========ELEMENTS TO DELETE==========

DOT_QUALIFIED_EXPRESSION:
 pb.addPhone(alexander, number1)

