package org.jetbrains.research.ml.kotlinAnalysis

import com.xenomachina.argparser.ArgParser
import org.jetbrains.research.pluginUtilities.runners.RunnerArgs
import org.jetbrains.research.pluginUtilities.runners.RunnerArgsParser
import java.nio.file.Path
import java.nio.file.Paths

// data classes (IORunnerArgs) cannot be inherited, so a lot of duplicates are at this place
data class SlicingRunnerArgs(val parser: ArgParser) : RunnerArgs {
    val inputDir: Path by parser.storing(
        "-i",
        "--input",
        help = "Input directory with kotlin projects"
    ) { Paths.get(this) }

    val outputDir: Path by parser.storing(
        "-o",
        "--output",
        help = "Output directory"
    ) { Paths.get(this) }

    val slice: Path by parser.storing(
        "-s",
        "--slice",
        help = "slice.log generated by Slicer4J"
    ) { Paths.get(this) }
}

object SlicingRunnerArgsParser : RunnerArgsParser<SlicingRunnerArgs> {

    override fun parse(args: List<String>): SlicingRunnerArgs {
        return ArgParser(args.drop(1).toTypedArray()).parseInto(::SlicingRunnerArgs)
            .run {
                require(inputDir.toFile().isDirectory) { "Argument has to be directory" }
                require(slice.toFile().exists()) { "Argument has to be existing slice.log file" }
                outputDir.toFile().mkdirs()
                this
            }
    }
}
